apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nifi
  name: nifi
  namespace: telco-webapplications-mvp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nifi
  template:
    metadata:
      labels:
        app: nifi
    spec:
      securityContext:
        runAsUser: 1000
      initContainers:
          name: nifi-fix
          command:
            - bash
            - '-c'
            - >-
              if [ ! -d /opt/nifi-fix/conf ]; then cp -ra
              /opt/nifi/nifi-current/* /opt/nifi-fix/; fi
          securityContext:
            runAsUser: 1000
          imagePullPolicy: IfNotPresent
          #          volumeMounts:
          # - name: nifi-pvc
          #    mountPath: /opt/nifi-fix
          #terminationMessagePolicy: File
          image: image-registry.openshift-image-registry.svc:5000/telco-webapplications-mvp/nifi
      containers:
      - image: image-registry.openshift-image-registry.svc:5000/telco-webapplications-mvp/nifi
        imagePullPolicy: Always
        name: nifi
        env:
        - name: NIFI_WEB_PROXY_HOST
          value: nifi-telco-webapplications-mvp.apps.mvp.telcostackmvp.br.telefonica.com
        - name: SINGLE_USER_CREDENTIALS_USERNAME
          value: admin
        - name: SINGLE_USER_CREDENTIALS_PASSWORD
          value: admin1234567
        ports:
        - containerPort: 8443
        volumeMounts:
        - mountPath: /opt/nifi/nifi-current
          name: nifi-storage
      volumes:
      - name: nifi-storage
        persistentVolumeClaim:
          claimName: nifi-storage
