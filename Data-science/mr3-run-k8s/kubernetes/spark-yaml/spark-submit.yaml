apiVersion: v1
kind: Pod
metadata:
  namespace: sparkmr3
  name: sparkmr3-submit
  labels:
    mr3-pod-role: master-role
    sparkmr3_app: driver
spec:
  serviceAccountName: spark-service-account
  restartPolicy: Never 
  hostAliases:
  - ip: "10.1.90.9"
    hostnames:
    - "gold0"
  containers:
  - image: 10.1.90.9:5000/spark3:latest
    command: ["/opt/mr3-run/spark/run-spark-submit.sh"]
    args: [
      "--conf spark.driver.bindAddress=0.0.0.0 --conf spark.driver.host=spark-driver.sparkmr3.svc.cluster.local --conf spark.driver.port=9850",
      "--class com.datamonad.mr3.spark.tpcds.RunManyQueries /opt/mr3-run/work-dir/lib/spark_mr3_tpcds_2.12-0.1.jar hdfs://gold0:8020/tmp/tpcds-generate/100 /opt/mr3-run/work-dir/sparksql/ 19,42,52,55 1 false"]
    imagePullPolicy: Always
    name: sparkmr3-submit
    env:
    - name: CLIENT_TO_AM_TOKEN_KEY
      valueFrom:
        configMapKeyRef:
          name: client-am-config
          key: key
    - name: MR3_APPLICATION_ID_TIMESTAMP
      valueFrom:
        configMapKeyRef:
          name: client-am-config
          key: timestamp
    resources:
      requests:
        cpu: 6 
        memory: 24Gi
      limits:
        cpu: 6
        memory: 24Gi
    ports:
    - containerPort: 9850
      protocol: TCP
    volumeMounts:
    - name: env-k8s-volume
      mountPath: /opt/mr3-run/env.sh
      subPath: env.sh
    - name: conf-k8s-volume
      mountPath: /opt/mr3-run/conf/
      readOnly: true
    - name: key-k8s-volume
      mountPath: /opt/mr3-run/key/
      readOnly: true
    # required if mr3.dag.recovery.enabled=true in mr3-site.xml
    #- name: work-dir-volume
    #  mountPath: /opt/mr3-run/work-dir
    # - name: host-lib-volume
    #   mountPath: /opt/mr3-run/host-lib
  volumes:
  - name: env-k8s-volume
    secret:
      secretName: env-secret
  - name: conf-k8s-volume
    configMap:
      name: sparkmr3-conf-configmap
  - name: key-k8s-volume
    secret:
      secretName: sparkmr3-keytab-secret
  # required if mr3.dag.recovery.enabled=true in mr3-site.xml
  #- name: work-dir-volume
  #  persistentVolumeClaim:
  #    claimName: workdir-pvc
  # - name: host-lib-volume
  #   hostPath:
  #     path: /home/ec2-user/lib
  #     type: Directory
