<configuration>

<property>
  <name>atlas.hook.hive.maxThreads</name>
  <value>1</value>
</property>

<property>
  <name>atlas.hook.hive.minThreads</name>
  <value>1</value>
</property>

<property>
  <name>datanucleus.autoCreateSchema</name>
  <value>false</value>
</property>

<property>
  <name>datanucleus.cache.level2.type</name>
  <value>none</value>
</property>

<property>
  <name>datanucleus.fixedDatastore</name>
  <value>true</value>
</property>

<property>
  <name>dfs.client.mmap.enabled</name>
  <value>false</value>
</property>

<property>
  <name>dfs.short.circuit.shared.memory.watcher.interrupt.check.ms</name>
  <value>0</value>
</property>

<property>
  <name>hive.auto.convert.join</name>
  <value>true</value>
</property>

<property>
  <name>hive.auto.convert.join.noconditionaltask</name>
  <value>true</value>
</property>

<property>
  <name>hive.auto.convert.sortmerge.join</name>
  <value>true</value>
</property>

<property>
  <name>hive.auto.convert.sortmerge.join.to.mapjoin</name>
  <value>true</value>
</property>

<property>
  <name>hive.cbo.enable</name>
  <value>true</value>
</property>

<property>
  <name>hive.cli.print.header</name>
  <value>false</value>
</property>

<property>
  <name>hive.compactor.abortedtxn.threshold</name>
  <value>1000</value>
</property>

<property>
  <name>hive.compactor.check.interval</name>
  <value>300L</value>
</property>

<property>
  <name>hive.compactor.delta.num.threshold</name>
  <value>10</value>
</property>

<property>
  <name>hive.compactor.delta.pct.threshold</name>
  <value>0.1f</value>
</property>

<property>
  <name>hive.compactor.initiator.on</name>
  <value>true</value>
</property>

<property>
  <name>hive.compactor.worker.threads</name>
  <value>1</value>
</property>

<property>
  <name>hive.compactor.worker.timeout</name>
  <value>86400L</value>
</property>

<property>
  <name>hive.compute.query.using.stats</name>
  <value>true</value>
</property>

<property>
  <name>hive.conf.restricted.list</name>
  <value>hive.security.authorization.enabled,hive.security.authenticator.manager,hive.security.authorization.manager,hive.users.in.admin.role</value>
</property>

<property>
  <name>hive.convert.join.bucket.mapjoin.tez</name>
  <value>true</value>
</property>

<property>
  <name>hive.default.fileformat</name>
  <value>TextFile</value>
</property>

<property>
  <name>hive.default.fileformat.managed</name>
  <value>TextFile</value>
</property>

<property>
  <name>hive.driver.parallel.compilation</name>
  <value>true</value>
</property>

<property>
  <name>hive.enforce.sortmergebucketmapjoin</name>
  <value>true</value>
</property>

<property>
  <name>hive.exec.compress.intermediate</name>
  <value>false</value>
</property>

<property>
  <name>hive.exec.compress.output</name>
  <value>false</value>
</property>

<property>
  <name>hive.exec.dynamic.partition</name>
  <value>true</value>
</property>

<property>
  <name>hive.exec.dynamic.partition.mode</name>
  <value>nonstrict</value>
</property>

<property>
  <name>hive.exec.failure.hooks</name>
  <value></value>
</property>

<property>
  <name>hive.exec.max.created.files</name>
  <value>100000</value>
</property>

<property>
  <name>hive.exec.max.dynamic.partitions</name>
  <value>5000</value>
</property>

<property>
  <name>hive.exec.max.dynamic.partitions.pernode</name>
  <value>2000</value>
</property>

<property>
  <name>hive.exec.orc.compression.strategy</name>
  <value>SPEED</value>
</property>

<property>
  <name>hive.exec.orc.default.compress</name>
  <value>ZLIB</value>
</property>

<property>
  <name>hive.exec.orc.default.stripe.size</name>
  <value>67108864</value>
</property>

<property>
  <name>hive.exec.orc.encoding.strategy</name>
  <value>SPEED</value>
</property>

<property>
  <name>hive.exec.orc.split.strategy</name>
  <value>HYBRID</value>
</property>

<property>
  <name>hive.exec.parallel</name>
  <value>false</value>
</property>

<property>
  <name>hive.exec.parallel.thread.number</name>
  <value>32</value>
</property>

<property>
  <name>hive.exec.post.hooks</name>
  <value></value>
</property>

<property>
  <name>hive.exec.pre.hooks</name>
  <value></value>
</property>

<property>
  <name>hive.exec.reducers.bytes.per.reducer</name>
  <value>67108864</value>
</property>

<property>
  <name>hive.exec.reducers.max</name>
  <value>1009</value>
</property>

<property>
  <name>hive.fetch.task.aggr</name>
  <value>false</value>
</property>

<property>
  <name>hive.fetch.task.conversion</name>
  <value>more</value>
</property>

<property>
  <name>hive.fetch.task.conversion.threshold</name>
  <value>1073741824</value>
</property>

<property>
  <name>hive.limit.optimize.enable</name>
  <value>true</value>
</property>

<property>
  <name>hive.limit.pushdown.memory.usage</name>
  <value>0.04</value>
</property>

<property>
  <name>hive.llap.auto.allow.uber</name>
  <value>false</value>
</property>

<property>
  <name>hive.llap.enable.grace.join.in.llap</name>
  <value>false</value>
</property>

<property>
  <name>hive.llap.io.memory.mode</name>
  <value>cache</value>
</property>

<property>
  <name>hive.llap.io.use.lrfu</name>
  <value>true</value>
</property>

<property>
  <name>hive.llap.management.rpc.port</name>
  <value>15004</value>
</property>

<property>
  <name>hive.llap.object.cache.enabled</name>
  <value>true</value>
</property>

<property>
  <name>hive.llap.task.scheduler.locality.delay</name>
  <value>-1</value>
</property>

<property>
  <name>hive.map.aggr</name>
  <value>true</value>
</property>

<property>
  <name>hive.map.aggr.hash.force.flush.memory.threshold</name>
  <value>0.9</value>
</property>

<property>
  <name>hive.map.aggr.hash.min.reduction</name>
  <value>0.99</value>
</property>

<property>
  <name>hive.map.aggr.hash.percentmemory</name>
  <value>0.5</value>
</property>

<property>
  <name>hive.mapjoin.bucket.cache.size</name>
  <value>10000</value>
</property>

<property>
  <name>hive.mapjoin.hybridgrace.hashtable</name>
  <value>false</value>
</property>

<property>
  <name>hive.mapjoin.optimized.hashtable</name>
  <value>true</value>
</property>

<property>
  <name>hive.merge.mapfiles</name>
  <value>true</value>
</property>

<property>
  <name>hive.merge.mapredfiles</name>
  <value>false</value>
</property>

<property>
  <name>hive.merge.nway.joins</name>
  <value>true</value>
  <description>
    mapjoin_filter_on_outerjoin.q fails with java.lang.NullPointerException raised from CommonJoinOperator.getFilterTag().
    Set it to false if necessary. Cf. HIVE-21189
  </description>
</property>

<property>
  <name>hive.merge.orcfile.stripe.level</name>
  <value>true</value>
</property>

<property>
  <name>hive.merge.rcfile.block.level</name>
  <value>true</value>
</property>

<property>
  <name>hive.merge.size.per.task</name>
  <value>256000000</value>
</property>

<property>
  <name>hive.merge.smallfiles.avgsize</name>
  <value>16000000</value>
</property>

<property>
  <name>hive.merge.tezfiles</name>
  <value>false</value>
</property>

<property>
  <name>hive.metastore.authorization.storage.checks</name>
  <value>false</value>
</property>

<property>
  <name>hive.metastore.cache.pinobjtypes</name>
  <value>Table,Database,Type,FieldSchema,Order</value>
</property>

<property>
  <name>hive.metastore.client.connect.retry.delay</name>
  <value>5s</value>
</property>

<property>
  <name>hive.metastore.client.socket.timeout</name>
  <value>1800s</value>
</property>

<property>
  <name>hive.metastore.connect.retries</name>
  <value>24</value>
</property>

<property>
  <name>hive.metastore.event.listeners</name>
  <value>org.apache.hive.hcatalog.listener.DbNotificationListener</value>
</property>

<property>
  <name>hive.metastore.execute.setugi</name>
  <value>true</value>
</property>

<property>
  <name>hive.metastore.failure.retries</name>
  <value>24</value>
</property>

<!--
  see HiveServer2.startPrivilegeSynchronizer() to learn when HiveServer2 creates ZooKeeperClient
 -->
<property>
  <name>hive.metastore.pre.event.listeners</name>
  <value>org.apache.hadoop.hive.ql.security.authorization.AuthorizationPreEventListener</value>
</property>
<property>
  <name>metastore.pre.event.listeners</name>
  <value>org.apache.hadoop.hive.ql.security.authorization.AuthorizationPreEventListener</value>
</property>

<property>
  <name>hive.metastore.server.max.threads</name>
  <value>100000</value>
</property>

<property>
  <name>hive.optimize.bucketmapjoin</name>
  <value>true</value>
</property>

<property>
  <name>hive.optimize.bucketmapjoin.sortedmerge</name>
  <value>true</value>
</property>

<property>
  <name>hive.optimize.constant.propagation</name>
  <value>true</value>
</property>

<property>
  <name>hive.optimize.index.filter</name>
  <value>true</value>
</property>

<property>
  <name>hive.optimize.metadataonly</name>
  <value>true</value>
</property>

<property>
  <name>hive.optimize.null.scan</name>
  <value>true</value>
</property>

<property>
  <name>hive.optimize.reducededuplication</name>
  <value>true</value>
</property>

<property>
  <name>hive.optimize.reducededuplication.min.reducer</name>
  <value>4</value>
</property>

<property>
  <name>hive.optimize.sort.dynamic.partition</name>
  <value>false</value>
</property>

<property>
  <name>hive.orc.compute.splits.num.threads</name>
  <value>10</value>
</property>

<property>
  <name>hive.orc.splits.include.file.footer</name>
  <value>false</value>
</property>

<property>
  <name>hive.server2.max.start.attempts</name>
  <value>5</value>
</property>

<property>
  <name>hive.server2.table.type.mapping</name>
  <value>CLASSIC</value>
</property>

<property>
  <name>hive.server2.thrift.http.path</name>
  <value>cliservice</value>
</property>

<property>
  <name>hive.server2.thrift.max.worker.threads</name>
  <value>500</value>
</property>

<property>
  <name>hive.server2.transport.mode</name>
  <value>all</value>
</property>

<property>
  <name>hive.server2.use.SSL</name>
  <value>false</value>
</property>

<property>
  <name>hive.server2.keystore.path</name>
  <value>/opt/mr3-run/key/hivemr3-ssl-certificate.jks</value>
</property>

<property>
  <name>hive.server2.keystore.password</name>
  <value>_</value>
</property>

<property>
  <name>hive.metastore.use.SSL</name>
  <value>false</value>
</property>

<property>
  <name>hive.metastore.keystore.path</name>
  <value>/opt/mr3-run/key/hivemr3-ssl-certificate.jks</value>
</property>

<property>
  <name>hive.metastore.truststore.path</name>
  <value>/opt/mr3-run/key/hivemr3-ssl-certificate.jks</value>
</property>

<property>
  <name>hive.server2.webui.port</name>
  <value>0</value>
</property>

<property>
  <name>hive.server2.webui.use.ssl</name>
  <value>false</value>
</property>

<property>
  <name>hive.smbjoin.cache.rows</name>
  <value>10000</value>
</property>

<property>
  <name>hive.start.cleanup.scratchdir</name>
  <value>false</value>
</property>

<property>
  <name>hive.stats.autogather</name>
  <value>true</value>
  <description>
    By default, Hive collects stats when running operations like alter table partition and create table.
    However, collecting stats requires Metastore to list all files under the table directory, which can be expensive on S3.
    Cf. HIVE-20246 and tblproperties('DO_NOT_UPDATE_STATS'='TRUE')
  </description>
</property>

<property>
  <name>hive.stats.dbclass</name>
  <value>fs</value>
</property>

<property>
  <name>hive.stats.fetch.column.stats</name>
  <value>true</value>
</property>

<property>
  <name>hive.stats.fetch.partition.stats</name>
  <value>true</value>
</property>

<property>
  <name>hive.support.concurrency</name>
  <value>true</value>
</property>

<property>
  <name>hive.tez.auto.reducer.parallelism</name>
  <value>true</value>
</property>

<property>
  <name>hive.tez.bucket.pruning</name>
  <value>true</value>
</property>

<property>
  <name>hive.tez.cartesian-product.enabled</name>
  <value>false</value>
</property>

<property>
  <name>hive.tez.dynamic.partition.pruning</name>
  <value>true</value>
</property>

<property>
  <name>hive.tez.dynamic.partition.pruning.max.data.size</name>
  <value>104857600</value>
</property>

<property>
  <name>hive.tez.dynamic.partition.pruning.max.event.size</name>
  <value>1048576</value>
</property>

<property>
  <name>hive.tez.input.format</name>
  <value>org.apache.hadoop.hive.ql.io.HiveInputFormat</value>
</property>

<property>
  <name>hive.tez.input.generate.consistent.splits</name>
  <value>true</value>
</property>

<property>
  <name>hive.tez.log.level</name>
  <value>INFO</value>
</property>

<property>
  <name>hive.tez.max.partition.factor</name>
  <value>2.0</value>
</property>

<property>
  <name>hive.tez.min.partition.factor</name>
  <value>0.25</value>
</property>

<property>
  <name>hive.tez.smb.number.waves</name>
  <value>0.5</value>
</property>

<property>
  <name>hive.txn.manager</name>
  <value>org.apache.hadoop.hive.ql.lockmgr.DbTxnManager</value>
</property>

<property>
  <name>hive.txn.max.open.batch</name>
  <value>1000</value>
</property>

<property>
  <name>hive.txn.timeout</name>
  <value>300</value>
</property>

<property>
  <name>hive.user.install.directory</name>
  <value>/user/</value>
</property>

<property>
  <name>hive.vectorized.execution.enabled</name>
  <value>true</value>
</property>

<property>
  <name>hive.vectorized.execution.mapjoin.minmax.enabled</name>
  <value>true</value>
</property>

<property>
  <name>hive.vectorized.execution.mapjoin.native.enabled</name>
  <value>true</value>
</property>

<property>
  <name>hive.vectorized.execution.mapjoin.native.fast.hashtable.enabled</name>
  <value>true</value>
</property>

<property>
  <name>hive.vectorized.execution.reduce.enabled</name>
  <value>true</value>
</property>

<property>
  <name>hive.vectorized.groupby.checkinterval</name>
  <value>4096</value>
</property>

<property>
  <name>hive.vectorized.groupby.flush.percent</name>
  <value>0.1</value>
</property>

<property>
  <name>hive.vectorized.groupby.maxentries</name>
  <value>1000000</value>
</property>

<property>
  <name>hive.warehouse.subdir.inherit.perms</name>
  <value>true</value>
</property>

<!-- Security -->

<property>
  <name>hive.security.authorization.enabled</name>
  <value>false</value>
</property>

<property>
  <name>hive.security.authenticator.manager</name>
  <value>org.apache.hadoop.hive.ql.security.HadoopDefaultAuthenticator</value>
  <!-- <value>org.apache.hadoop.hive.ql.security.ProxyUserAuthenticator</value> -->
  <!-- <value>org.apache.hadoop.hive.ql.security.SessionStateUserAuthenticator</value> -->
</property>

<property>
  <name>hive.security.authorization.manager</name>
  <!-- <value>org.apache.hadoop.hive.ql.security.authorization.plugin.sqlstd.SQLStdConfOnlyAuthorizerFactory</value> -->
  <value>org.apache.hadoop.hive.ql.security.authorization.plugin.sqlstd.SQLStdHiveAuthorizerFactory</value> 
  <!-- <value>org.apache.ranger.authorization.hive.authorizer.RangerHiveAuthorizerFactory</value> -->
</property>

<!-- set to false in order not to create ZooKeeperClient in HiveServer2
  With Ranger 2.1.0:
    RangerHiveAuthorizerBase.getHivePolicyProvider() returns RangerHivePolicyProvider.
    Hence we should explicitly set hive.privilege.synchronizer to false.
 -->
<property>
  <name>hive.privilege.synchronizer</name>
  <value>false</value>
</property>

<property>
  <name>hive.security.metastore.authenticator.manager</name>
  <value>org.apache.hadoop.hive.ql.security.HadoopDefaultMetastoreAuthenticator</value>
</property>

<property>
  <name>hive.security.metastore.authorization.auth.reads</name>
  <value>true</value>
</property>

<property>
  <name>hive.security.metastore.authorization.manager</name>
  <!-- <value>org.apache.hadoop.hive.ql.security.authorization.DefaultHiveMetastoreAuthorizationProvider</value> -->
  <!-- if enabled, a ZooKeeper client starts, so hive.zookeeper.quorum should be set properly -->
  <value>org.apache.hadoop.hive.ql.security.authorization.StorageBasedAuthorizationProvider</value>
</property>

<property>
  <name>hive.server2.enable.doAs</name>
  <value>false</value>
</property>

<property>
  <name>hive.server2.allow.user.substitution</name>
  <value>true</value>
</property>

<property>
  <name>hive.server2.authentication.spnego.keytab</name>
  <value></value>
</property>

<property>
  <name>hive.server2.authentication.spnego.principal</name>
  <value></value>
</property>

<property> 
  <name>hive.security.authorization.sqlstd.confwhitelist.append</name>
  <value>hive\.querylog\.location.*|hive\.mr3\.map\.task.*|hive\.mr3\.reduce\.task.*</value>
</property>

<!-- Metastore -->

<property>
  <name>hive.metastore.db.type</name>
  <value>postgres</value>
</property>

<property>
  <name>javax.jdo.option.ConnectionDriverName</name>
  <value>org.postgresql.Driver</value>
</property>

<property>
  <name>javax.jdo.option.ConnectionURL</name>
  <value>jdbc:postgresql://${hive.database.host}/${hive.database.name}?createDatabaseIfNotExist=true&amp;useSSL=false</value>
  <!-- <value>jdbc:mysql://${hive.database.host}/${hive.database.name}?createDatabaseIfNotExist=true&amp;useSSL=true&amp;verifyServerCertificate=true</value> -->
</property>

<property>
  <name>javax.jdo.option.ConnectionUserName</name>
  <value>hive</value>
</property>

<property>
  <name>javax.jdo.option.ConnectionPassword</name>
  <value>hive</value>
</property>

<property>
  <name>hive.metastore.kerberos.keytab.file</name>
  <value>${hive.metastore.keytab.file}</value>
</property>

<property>
  <name>hive.metastore.kerberos.principal</name>
  <value>${hive.metastore.principal}</value>
</property>

<property>
  <name>hive.metastore.sasl.enabled</name>
  <value>${hive.metastore.secure.mode}</value>
</property>

<property>
  <name>hive.metastore.uris</name>
  <value>thrift://${hive.metastore.host}:${hive.metastore.port}</value>
</property>

<property>
  <name>hive.metastore.warehouse.dir</name>
  <value>${hive.warehouse.dir}</value>
</property>

<!-- new in Hive 3.0 -->

<property>
  <name>hive.metastore.event.db.notification.api.auth</name>
  <value>false</value>
</property>

<property>
  <name>metastore.metastore.event.db.notification.api.auth</name>
  <value>false</value>
</property>

<!-- HiveServer2 -->

<property>
  <name>hive.users.in.admin.role</name>
  <value>root,hive</value>
</property>

<property>
  <name>hive.server2.authentication</name>
  <value>${hive.server2.authentication.mode}</value>
</property>

<property>
  <name>hive.server2.authentication.kerberos.keytab</name>
  <value>${hive.server2.keytab.file}</value>
</property>

<property>
  <name>hive.server2.authentication.kerberos.principal</name>
  <value>${hive.server2.principal}</value>
</property>

<property>
  <name>hive.server2.logging.operation.enabled</name>
  <value>true</value>
</property>

<property>
  <name>hive.server2.thrift.http.port</name>
  <value>${hive.server2.http.port}</value>
</property>

<property>
  <name>hive.server2.thrift.bind.host</name>
  <value>${hive.server2.host}</value>
</property>

<property>
  <name>hive.server2.thrift.port</name>
  <value>${hive.server2.port}</value>
</property>

<property>
  <name>hive.server2.thrift.sasl.qop</name>
  <!--value>auth</value-->
  <value>auth-conf</value>
</property>

<!-- Hive (configurable) -->

<property>
  <name>hive.auto.convert.join.noconditionaltask.size</name>
  <value>1145044992</value>
</property>
    
<property>
  <name>hive.optimize.dynamic.partition.hashjoin</name>
  <value>true</value>
</property>

<property>
  <name>hive.async.log.enabled</name>
  <value>true</value>
</property>

<property>
  <name>metastore.aggregate.stats.cache.enabled</name>
  <value>true</value>
</property>

<property>
  <name>hive.metastore.aggregate.stats.cache.enabled</name>
  <value>true</value>
</property>

<property>
  <name>hive.query.results.cache.enabled</name>
  <value>true</value>
</property>

<!-- MR3 LLAP (configurable) -->

<property>
  <name>hive.llap.io.enabled</name>
  <value>false</value>
</property>

<property>
  <name>hive.llap.io.allocator.mmap</name>
  <value>false</value>
</property>

<property>
  <name>hive.llap.io.allocator.mmap.path</name>
  <value>/data1/llap</value>
</property>

<property>
  <name>hive.llap.io.memory.size</name>
  <value>72Gb</value>
</property>

<property>
  <name>hive.mr3.llap.headroom.mb</name>
  <value>8192</value>
</property>

<property>
  <name>hive.llap.io.threadpool.size</name>
  <value>10</value>
  <description> 
    hive.llap.io.threadpool.size must be >= # of TaskAttempts running in a ContainerWorker (and hive.llap.daemon.num.executors).
    Cf. HIVE-24626
  </description>
</property>
    
<property>
  <name>hive.llap.daemon.num.executors</name>
  <value>10</value>
  <description> 
    Used as an estimate number of Reducers in LlapDecider when no ContainerWorkers are running
  </description>
</property>

<!-- MR3 LLAP (fixed) -->

<property>
  <name>hive.execution.engine</name>
  <value>mr3</value>
</property>

<property>
  <name>hive.execution.mode</name>
  <value>llap</value>
</property>

<property>
  <name>hive.mr3.container.use.per.query.cache</name>
  <value>true</value>
</property>

<property>
  <name>hive.llap.hs2.coordinator.enabled</name>
  <value>false</value>
</property>

<!-- should be unset -->
<property>
  <name>hive.llap.daemon.service.hosts</name>
  <value></value>
</property>
    
<property>
  <name>hive.strict.checks.cartesian.product</name>
  <value>false</value>
</property>

<property>
  <name>hive.server2.support.dynamic.service.discovery</name>
  <value>false</value>
</property>
    
<property>
  <name>hive.cluster.delegation.token.store.class</name>
  <value>org.apache.hadoop.hive.thrift.MemoryTokenStore</value>
</property>
    
<property>
  <name>hive.llap.client.consistent.splits</name>
  <value>true</value>
</property>
    
<property>
  <name>hive.llap.execution.mode</name>
  <value>all</value>
</property>
    
<property>
  <name>hive.aux.jars.path</name>
  <value></value>
</property>

<property>
  <name>hive.resource.use.hdfs.location</name>
  <value>true</value>
  <description>
    Can be set to false if no additional resources are added (other than hive.aux.jars.path)
  </description>
</property>
    
<!-- ZooKeeper -->

<property>
  <name>hive.zookeeper.quorum</name>
  <value>red0:2181</value>
</property>

<!-- MR3 -->

<property>
  <name>hive.mr3.exec.print.summary</name>
  <value>true</value>
</property>

<!-- to use individual session mode, do not pass MR3_APPLICATION_ID_TIMESTAMP to HiveServer2 -->
<property>
  <name>hive.server2.mr3.share.session</name>
  <value>true</value>
</property>

<property>
  <name>hive.mr3.container.combine.taskattempts</name>
  <value>true</value>
</property>

<property>
  <name>hive.mr3.container.reuse</name>
  <value>true</value>
</property>

<property>
  <name>hive.mr3.containergroup.scheme</name>
  <value>all-in-one</value>
</property>

<property>
  <name>hive.mr3.container.max.java.heap.fraction</name>
  <value>0.7f</value>
</property>

<property>
  <name>hive.mr3.resource.vcores.divisor</name>
  <value>1</value>
</property>

<property>
  <name>hive.mr3.map.task.memory.mb</name>
  <value>8192</value>
</property>

<property>
  <name>hive.mr3.map.task.vcores</name>
  <value>1</value>
</property>

<property>
  <name>hive.mr3.reduce.task.memory.mb</name>
  <value>8192</value>
</property>

<property>
  <name>hive.mr3.reduce.task.vcores</name>
  <value>1</value>
</property>

<property>
  <name>hive.mr3.all-in-one.containergroup.memory.mb</name>
  <value>16384</value>
</property>

<property>
  <name>hive.mr3.all-in-one.containergroup.vcores</name>
  <value>2</value>
</property>

<property>
  <name>hive.mr3.map.containergroup.memory.mb</name>
  <value>16384</value>
</property>

<property>
  <name>hive.mr3.map.containergroup.vcores</name>
  <value>2</value>
</property>

<property>
  <name>hive.mr3.reduce.containergroup.memory.mb</name>
  <value>16384</value>
</property>

<property>
  <name>hive.mr3.reduce.containergroup.vcores</name>
  <value>2</value>
</property>

<property>
  <name>hive.mr3.use.daemon.shufflehandler</name>
  <value>2</value>
  <description>
    Adjust tez.shuffle.max.threads in tez-site.xml (to a non-zero value) if necessary
  </description>
</property>

<property>
  <name>hive.mr3.am.task.max.failed.attempts</name>
  <value>5</value>
</property>

<property>
  <name>hive.mr3.delete.vertex.local.directory</name>
  <value>false</value>
</property>

<property>
  <name>hive.mr3.bucket.mapjoin.estimate.num.nodes</name>
  <value>-1</value>
  <description>
    Set to -1 in order to ask MR3 to get the number of Nodes at runtime
  </description>
</property>

<!-- scheduling 0.10 -->

<property>
  <name>hive.tez.llap.min.reducer.per.executor</name>
  <value>0.2f</value>
</property>

<!-- speculative execution 1.1 -->

<property>
  <name>hive.mr3.am.task.concurrent.run.threshold.percent</name>
  <value>95</value>
</property>

<!-- Kubernetes -->

<property>
  <name>hive.mr3.localize.session.jars</name>
  <value>false</value>
</property>

<!--
  If the user chooses to override hive.exec.stagingdir for running such queries as 'analyze table',
  it should be set to a directory (with write permission) in the same file system where target tables reside.
  For example, if target tables reside on S3, hive.exec.stagingdir should point to a directory on S3.
 -->

<!--
  It is okay to use /opt/mr3-run/scratch-dir for hive.exec.scratchdir and hive.downloaded.resources.dir.
 -->
<property>
  <name>hive.exec.scratchdir</name>
  <value>s3a://hivemr3-6054f65b-976f-4d25-8a0e-ea0a33898569/workdir</value>
</property>

<property>
  <name>hive.downloaded.resources.dir</name>
  <value>/opt/mr3-run/work-dir/${hive.session.id}_resources</value>
</property>

<property>
  <name>hive.exec.local.scratchdir</name>
  <value>/opt/mr3-run/scratch-dir</value>
</property>

<property>
  <name>hive.query.results.cache.directory</name>
  <value>s3a://hivemr3-6054f65b-976f-4d25-8a0e-ea0a33898569/workdir/_resultscache_</value>
</property>

<property>
  <name>hive.server2.logging.operation.log.location</name>
  <value>/opt/mr3-run/scratch-dir/operation_logs</value>
</property>

<property>
  <name>hive.mr3.dag.additional.credentials.source</name>
  <value>hdfs://red0:8020/tmp/hivemr3/warehouse/</value>
</property>

<!-- Token renewal -->

<property>
  <name>dfs.namenode.delegation.token.renew-interval</name>
  <value>86400000</value>
</property>

<property>
  <name>hive.cluster.delegation.token.renew-interval</name>
  <value>1</value>
  <description>
    Hive 3 and Hive 4: The unit is days, not milli-seconds.
    Hive 2: The unit is milli-seconds.
  </description>
</property>

<!-- Compaction -->

<property>
  <name>hive.mr3.compaction.using.mr3</name>
  <value>true</value>
</property>

<!-- Repl -->

<property>
  <name>hive.distcp.privileged.doAs</name>
  <value>hive</value>
</property>

<property>
  <name>hive.repl.rootdir</name>
  <value>/opt/mr3-run/work-dir</value>
</property>

<!-- Hive 4 -->

<property>
  <name>hive.metastore.warehouse.external.dir</name>
  <value>${hive.warehouse.dir}</value>
</property>

<property>
  <name>hive.acid.direct.insert.enabled</name>
  <value>true</value>
</property>

<property>
  <name>hive.optimize.scan.probedecode</name>
  <value>true</value>
</property>

<property>
  <name>hive.zookeeper.killquery.enable</name>
  <value>false</value>
</property>

<property>
  <name>hive.llap.io.proactive.eviction.enabled</name>
  <value>false</value>
</property>

<property>
  <name>hive.mapred.reduce.tasks.speculative.execution</name>
  <value>false</value>
</property>

<!-- S3 -->

<property>
  <name>hive.llap.io.use.fileid.path</name>
  <value>false</value>
  <description>
    In practice, we have hive.llap.io.use.fileid.path = "is HDFS".
    Cf. HIVE-20338 (LLAP: Force synthetic file-id for filesystems which have HDFS protocol impls with POSIX mutation semantics)
  </description>
</property>

<property>
  <name>hive.security.authorization.createtable.owner.grants</name>
  <value>ALL</value>
  <description>the privileges automatically granted to the owner whenever a table gets created. 
   An example like "select,drop" will grant select and drop privilege to the owner of the table</description>
</property>

<property>
    <name>hive.security.metastore.authorization.enabled</name>
    <value>false</value>
</property>    

</configuration>
